//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FourDO.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FourDO.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bytes.
        /// </summary>
        internal static string BrowserColumnBytes {
            get {
                return ResourceManager.GetString("BrowserColumnBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Extension.
        /// </summary>
        internal static string BrowserColumnExtension {
            get {
                return ResourceManager.GetString("BrowserColumnExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ID.
        /// </summary>
        internal static string BrowserColumnID {
            get {
                return ResourceManager.GetString("BrowserColumnID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Name.
        /// </summary>
        internal static string BrowserColumnName {
            get {
                return ResourceManager.GetString("BrowserColumnName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Extract To....
        /// </summary>
        internal static string BrowserMenuExtract {
            get {
                return ResourceManager.GetString("BrowserMenuExtract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Extract &amp;Current Directory To....
        /// </summary>
        internal static string BrowserMenuExtractDirectory {
            get {
                return ResourceManager.GetString("BrowserMenuExtractDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Extract Whole &amp;Disc To....
        /// </summary>
        internal static string BrowserMenuExtractDisc {
            get {
                return ResourceManager.GetString("BrowserMenuExtractDisc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Open Directory.
        /// </summary>
        internal static string BrowserMenuOpenDirectory {
            get {
                return ResourceManager.GetString("BrowserMenuOpenDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на   Up.
        /// </summary>
        internal static string BrowserUp {
            get {
                return ResourceManager.GetString("BrowserUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disc Browser.
        /// </summary>
        internal static string BrowserWindowTitle {
            get {
                return ResourceManager.GetString("BrowserWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 3DOPlay Authors:.
        /// </summary>
        internal static string HelpAbout3DOPlayAuthors {
            get {
                return ResourceManager.GetString("HelpAbout3DOPlayAuthors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на In February of 2012, the core emulation from 3DOPlay was merged into 4DO&apos;s copy of the FreeDO core by Viktor, providing the benefit of two separate 3DO emulation projects!.
        /// </summary>
        internal static string HelpAbout3DOPlayMessage {
            get {
                return ResourceManager.GetString("HelpAbout3DOPlayMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 4DO Authors:.
        /// </summary>
        internal static string HelpAbout4DOAuthors {
            get {
                return ResourceManager.GetString("HelpAbout4DOAuthors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 4DO (FourDO) is an open-source, low-level emulator of the 3DO Interactive Multiplayer system..
        /// </summary>
        internal static string HelpAbout4DOMessage {
            get {
                return ResourceManager.GetString("HelpAbout4DOMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 4DO Version:.
        /// </summary>
        internal static string HelpAbout4DOVersion {
            get {
                return ResourceManager.GetString("HelpAbout4DOVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Close.
        /// </summary>
        internal static string HelpAboutClose {
            get {
                return ResourceManager.GetString("HelpAboutClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на FreeDO Authors:.
        /// </summary>
        internal static string HelpAboutFreeDOAuthors {
            get {
                return ResourceManager.GetString("HelpAboutFreeDOAuthors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 4DO&apos;s (and 3DOPlay&apos;s) system emulation is based on the code released from the FreeDO project that went open source on Nov 10, 2010.  Many thanks to the developers for deciding to release their code!.
        /// </summary>
        internal static string HelpAboutFreeDOMessage {
            get {
                return ResourceManager.GetString("HelpAboutFreeDOMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Additional thanks to:.
        /// </summary>
        internal static string HelpAboutJohnnyThank {
            get {
                return ResourceManager.GetString("HelpAboutJohnnyThank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Johnny would like to thank other folks, some of whom helped with the original, high-level approach..
        /// </summary>
        internal static string HelpAboutJohnnyThankMessage {
            get {
                return ResourceManager.GetString("HelpAboutJohnnyThankMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sector 0+1 Checksum:.
        /// </summary>
        internal static string HelpInfoChecksum {
            get {
                return ResourceManager.GetString("HelpInfoChecksum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Game Id:.
        /// </summary>
        internal static string HelpInfoGameId {
            get {
                return ResourceManager.GetString("HelpInfoGameId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Game Name:.
        /// </summary>
        internal static string HelpInfoGameName {
            get {
                return ResourceManager.GetString("HelpInfoGameName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;OK.
        /// </summary>
        internal static string HelpInfoOK {
            get {
                return ResourceManager.GetString("HelpInfoOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Publisher:.
        /// </summary>
        internal static string HelpInfoPublisher {
            get {
                return ResourceManager.GetString("HelpInfoPublisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Region(s):.
        /// </summary>
        internal static string HelpInfoRegion {
            get {
                return ResourceManager.GetString("HelpInfoRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Release Year:.
        /// </summary>
        internal static string HelpInfoReleaseYear {
            get {
                return ResourceManager.GetString("HelpInfoReleaseYear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Game Information.
        /// </summary>
        internal static string HelpInfoWindowTitle {
            get {
                return ResourceManager.GetString("HelpInfoWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The bios file ({0}) failed to load. Please choose another..
        /// </summary>
        internal static string MainErrorLoadBiosFile {
            get {
                return ResourceManager.GetString("MainErrorLoadBiosFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The game failed to load. Please choose another..
        /// </summary>
        internal static string MainErrorLoadGame {
            get {
                return ResourceManager.GetString("MainErrorLoadGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The game file ({0}) failed to load. Please choose another..
        /// </summary>
        internal static string MainErrorLoadGameFile {
            get {
                return ResourceManager.GetString("MainErrorLoadGameFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &quot;The nvram file ({0}) could not be loaded. Emulation cannot start.&quot;.
        /// </summary>
        internal static string MainErrorLoadNvramFile {
            get {
                return ResourceManager.GetString("MainErrorLoadNvramFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Audio.
        /// </summary>
        internal static string MainMenuAudio {
            get {
                return ResourceManager.GetString("MainMenuAudio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Console.
        /// </summary>
        internal static string MainMenuConsole {
            get {
                return ResourceManager.GetString("MainMenuConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Advance by a Single Frame.
        /// </summary>
        internal static string MainMenuConsoleAdvanceFrame {
            get {
                return ResourceManager.GetString("MainMenuConsoleAdvanceFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на After Game is Opened, L&amp;oad Last Save (of Slot).
        /// </summary>
        internal static string MainMenuConsoleAutoLoadLastSave {
            get {
                return ResourceManager.GetString("MainMenuConsoleAutoLoadLastSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Load State.
        /// </summary>
        internal static string MainMenuConsoleLoadState {
            get {
                return ResourceManager.GetString("MainMenuConsoleLoadState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Pause.
        /// </summary>
        internal static string MainMenuConsolePause {
            get {
                return ResourceManager.GetString("MainMenuConsolePause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Reset.
        /// </summary>
        internal static string MainMenuConsoleReset {
            get {
                return ResourceManager.GetString("MainMenuConsoleReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Save State.
        /// </summary>
        internal static string MainMenuConsoleSaveState {
            get {
                return ResourceManager.GetString("MainMenuConsoleSaveState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save State Slo&amp;t.
        /// </summary>
        internal static string MainMenuConsoleSaveStateSlot {
            get {
                return ResourceManager.GetString("MainMenuConsoleSaveStateSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select &amp;Next Slot.
        /// </summary>
        internal static string MainMenuConsoleSaveStateSlotNext {
            get {
                return ResourceManager.GetString("MainMenuConsoleSaveStateSlotNext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select &amp;Previous Slot.
        /// </summary>
        internal static string MainMenuConsoleSaveStateSlotPrevious {
            get {
                return ResourceManager.GetString("MainMenuConsoleSaveStateSlotPrevious", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Screens&amp;hot.
        /// </summary>
        internal static string MainMenuConsoleScreenshot {
            get {
                return ResourceManager.GetString("MainMenuConsoleScreenshot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Display.
        /// </summary>
        internal static string MainMenuDisplay {
            get {
                return ResourceManager.GetString("MainMenuDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Auto-&amp;Crop Blank Borders.
        /// </summary>
        internal static string MainMenuDisplayAutoCrop {
            get {
                return ResourceManager.GetString("MainMenuDisplayAutoCrop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Full Screen.
        /// </summary>
        internal static string MainMenuDisplayFullscreen {
            get {
                return ResourceManager.GetString("MainMenuDisplayFullscreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Preserve Aspect &amp;Ratio.
        /// </summary>
        internal static string MainMenuDisplayPreserveRatio {
            get {
                return ResourceManager.GetString("MainMenuDisplayPreserveRatio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Snap &amp;Window to Clean Increments.
        /// </summary>
        internal static string MainMenuDisplayResizeSnap {
            get {
                return ResourceManager.GetString("MainMenuDisplayResizeSnap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Scaling Mode.
        /// </summary>
        internal static string MainMenuDisplayScaling {
            get {
                return ResourceManager.GetString("MainMenuDisplayScaling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Double Resolution Rendering.
        /// </summary>
        internal static string MainMenuDisplayScalingDoubleRes {
            get {
                return ResourceManager.GetString("MainMenuDisplayScalingDoubleRes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на hq2x.
        /// </summary>
        internal static string MainMenuDisplayScalingHq2x {
            get {
                return ResourceManager.GetString("MainMenuDisplayScalingHq2x", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на hq3x.
        /// </summary>
        internal static string MainMenuDisplayScalingHq3x {
            get {
                return ResourceManager.GetString("MainMenuDisplayScalingHq3x", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на hq4x.
        /// </summary>
        internal static string MainMenuDisplayScalingHq4x {
            get {
                return ResourceManager.GetString("MainMenuDisplayScalingHq4x", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на None.
        /// </summary>
        internal static string MainMenuDisplayScalingNone {
            get {
                return ResourceManager.GetString("MainMenuDisplayScalingNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Smooth Image Resizing.
        /// </summary>
        internal static string MainMenuDisplaySmoothResizing {
            get {
                return ResourceManager.GetString("MainMenuDisplaySmoothResizing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Blank (Void) Area.
        /// </summary>
        internal static string MainMenuDisplayVoidArea {
            get {
                return ResourceManager.GetString("MainMenuDisplayVoidArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Draw Gray Border.
        /// </summary>
        internal static string MainMenuDisplayVoidAreaDrawBorder {
            get {
                return ResourceManager.GetString("MainMenuDisplayVoidAreaDrawBorder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pattern : 4DO.
        /// </summary>
        internal static string MainMenuDisplayVoidAreaPattern4DO {
            get {
                return ResourceManager.GetString("MainMenuDisplayVoidAreaPattern4DO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pattern : Bumps.
        /// </summary>
        internal static string MainMenuDisplayVoidAreaPatternBumps {
            get {
                return ResourceManager.GetString("MainMenuDisplayVoidAreaPatternBumps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pattern : Metal.
        /// </summary>
        internal static string MainMenuDisplayVoidAreaPatternMetal {
            get {
                return ResourceManager.GetString("MainMenuDisplayVoidAreaPatternMetal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No Pattern.
        /// </summary>
        internal static string MainMenuDisplayVoidAreaPatternNone {
            get {
                return ResourceManager.GetString("MainMenuDisplayVoidAreaPatternNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;File.
        /// </summary>
        internal static string MainMenuFile {
            get {
                return ResourceManager.GetString("MainMenuFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на After Startup, Open Last Game.
        /// </summary>
        internal static string MainMenuFileAutoLoadLastGame {
            get {
                return ResourceManager.GetString("MainMenuFileAutoLoadLastGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Choose &amp;BIOS Rom (Current: {0})....
        /// </summary>
        internal static string MainMenuFileChooseBiosRom1 {
            get {
                return ResourceManager.GetString("MainMenuFileChooseBiosRom1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Choose BIOS Rom 2 : Kanji Font (Current: {0})....
        /// </summary>
        internal static string MainMenuFileChooseBiosRom2 {
            get {
                return ResourceManager.GetString("MainMenuFileChooseBiosRom2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Close Game.
        /// </summary>
        internal static string MainMenuFileCloseRom {
            get {
                return ResourceManager.GetString("MainMenuFileCloseRom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на E&amp;xit.
        /// </summary>
        internal static string MainMenuFileExit {
            get {
                return ResourceManager.GetString("MainMenuFileExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open Disc Drive.
        /// </summary>
        internal static string MainMenuFileOpenCDDrive {
            get {
                return ResourceManager.GetString("MainMenuFileOpenCDDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open CD &amp;Image CoreFile....
        /// </summary>
        internal static string MainMenuFileOpenCDImage {
            get {
                return ResourceManager.GetString("MainMenuFileOpenCDImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Help.
        /// </summary>
        internal static string MainMenuHelp {
            get {
                return ResourceManager.GetString("MainMenuHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;About 4DO....
        /// </summary>
        internal static string MainMenuHelpAbout {
            get {
                return ResourceManager.GetString("MainMenuHelpAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Game &amp;Information....
        /// </summary>
        internal static string MainMenuHelpGameInfo {
            get {
                return ResourceManager.GetString("MainMenuHelpGameInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Options.
        /// </summary>
        internal static string MainMenuOptions {
            get {
                return ResourceManager.GetString("MainMenuOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Configure &amp;Input....
        /// </summary>
        internal static string MainMenuOptionsConfigureInput {
            get {
                return ResourceManager.GetString("MainMenuOptionsConfigureInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Language.
        /// </summary>
        internal static string MainMenuOptionsLanguage {
            get {
                return ResourceManager.GetString("MainMenuOptionsLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Chinese - Simplified.
        /// </summary>
        internal static string MainMenuOptionsLanguageChinese {
            get {
                return ResourceManager.GetString("MainMenuOptionsLanguageChinese", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на System &amp;Default.
        /// </summary>
        internal static string MainMenuOptionsLanguageDefault {
            get {
                return ResourceManager.GetString("MainMenuOptionsLanguageDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;English.
        /// </summary>
        internal static string MainMenuOptionsLanguageEnglish {
            get {
                return ResourceManager.GetString("MainMenuOptionsLanguageEnglish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;French.
        /// </summary>
        internal static string MainMenuOptionsLanguageFrench {
            get {
                return ResourceManager.GetString("MainMenuOptionsLanguageFrench", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;German.
        /// </summary>
        internal static string MainMenuOptionsLanguageGerman {
            get {
                return ResourceManager.GetString("MainMenuOptionsLanguageGerman", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Portuguese.
        /// </summary>
        internal static string MainMenuOptionsLanguagePortuguese {
            get {
                return ResourceManager.GetString("MainMenuOptionsLanguagePortuguese", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Russian.
        /// </summary>
        internal static string MainMenuOptionsLanguageRussian {
            get {
                return ResourceManager.GetString("MainMenuOptionsLanguageRussian", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Spanish.
        /// </summary>
        internal static string MainMenuOptionsLanguageSpanish {
            get {
                return ResourceManager.GetString("MainMenuOptionsLanguageSpanish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 4DO &amp;Settings....
        /// </summary>
        internal static string MainMenuOptionsSettings {
            get {
                return ResourceManager.GetString("MainMenuOptionsSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Scale mode.
        /// </summary>
        internal static string MainMenuScale {
            get {
                return ResourceManager.GetString("MainMenuScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Tools.
        /// </summary>
        internal static string MainMenuTools {
            get {
                return ResourceManager.GetString("MainMenuTools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disc &amp;Browser.
        /// </summary>
        internal static string MainMenuToolsDiscBrowser {
            get {
                return ResourceManager.GetString("MainMenuToolsDiscBrowser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All files.
        /// </summary>
        internal static string MainMessageAllFiles {
            get {
                return ResourceManager.GetString("MainMessageAllFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на BIOS files.
        /// </summary>
        internal static string MainMessageBiosFiles {
            get {
                return ResourceManager.GetString("MainMessageBiosFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CD image files.
        /// </summary>
        internal static string MainMessageCDImageFiles {
            get {
                return ResourceManager.GetString("MainMessageCDImageFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Choose BIOS Rom.
        /// </summary>
        internal static string MainMessageChooseBiosRom {
            get {
                return ResourceManager.GetString("MainMessageChooseBiosRom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Core FPS.
        /// </summary>
        internal static string MainMessageCoreFPS {
            get {
                return ResourceManager.GetString("MainMessageCoreFPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Display Options.
        /// </summary>
        internal static string MainMessageDisplayOptions {
            get {
                return ResourceManager.GetString("MainMessageDisplayOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Health:.
        /// </summary>
        internal static string MainMessageHealth {
            get {
                return ResourceManager.GetString("MainMessageHealth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hide.
        /// </summary>
        internal static string MainMessageHide {
            get {
                return ResourceManager.GetString("MainMessageHide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No BIOS rom selected..
        /// </summary>
        internal static string MainMessageNoBiosSelected {
            get {
                return ResourceManager.GetString("MainMessageNoBiosSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Slot.
        /// </summary>
        internal static string MainMessageSlot {
            get {
                return ResourceManager.GetString("MainMessageSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unknown game.
        /// </summary>
        internal static string MainMessageUnknownGame {
            get {
                return ResourceManager.GetString("MainMessageUnknownGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Volume.
        /// </summary>
        internal static string MainMessageVolume {
            get {
                return ResourceManager.GetString("MainMessageVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Cancel.
        /// </summary>
        internal static string SettingsCancel {
            get {
                return ResourceManager.GetString("SettingsCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;OK.
        /// </summary>
        internal static string SettingsOK {
            get {
                return ResourceManager.GetString("SettingsOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Advanced.
        /// </summary>
        internal static string SettingsTabAdvanced {
            get {
                return ResourceManager.GetString("SettingsTabAdvanced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fewer Glitches.
        /// </summary>
        internal static string SettingsTabAdvancedAudioBufferFewerGlitches {
            get {
                return ResourceManager.GetString("SettingsTabAdvancedAudioBufferFewerGlitches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Audio Buffer Size.
        /// </summary>
        internal static string SettingsTabAdvancedAudioBufferFrame {
            get {
                return ResourceManager.GetString("SettingsTabAdvancedAudioBufferFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Less Lag.
        /// </summary>
        internal static string SettingsTabAdvancedAudioBufferLessLag {
            get {
                return ResourceManager.GetString("SettingsTabAdvancedAudioBufferLessLag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The audio buffer provides tolerance for unpredictable emulation speed at the cost of audio delay. However, whenever emulation is terminally behind schedule, audio glitches will occur (even with large buffers)..
        /// </summary>
        internal static string SettingsTabAdvancedAudioBufferMessage {
            get {
                return ResourceManager.GetString("SettingsTabAdvancedAudioBufferMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MORE Glitches.
        /// </summary>
        internal static string SettingsTabAdvancedAudioBufferMoreGlitches {
            get {
                return ResourceManager.GetString("SettingsTabAdvancedAudioBufferMoreGlitches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MORE Lag.
        /// </summary>
        internal static string SettingsTabAdvancedAudioBufferMoreLag {
            get {
                return ResourceManager.GetString("SettingsTabAdvancedAudioBufferMoreLag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CPU Clock Speed.
        /// </summary>
        internal static string SettingsTabAdvancedClockFrame {
            get {
                return ResourceManager.GetString("SettingsTabAdvancedClockFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Higher FPS.
        /// </summary>
        internal static string SettingsTabAdvancedClockHigherFPS {
            get {
                return ResourceManager.GetString("SettingsTabAdvancedClockHigherFPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на By adjusting the CPU clock speed, you can potentially achieve higher FPS in games. Not all games will handle this appropriately. Games dependent on precise timing could even crash/freeze..
        /// </summary>
        internal static string SettingsTabAdvancedClockMessage {
            get {
                return ResourceManager.GetString("SettingsTabAdvancedClockMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Normal FPS.
        /// </summary>
        internal static string SettingsTabAdvancedClockNormalFPS {
            get {
                return ResourceManager.GetString("SettingsTabAdvancedClockNormalFPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Consider setting these to defaults if seeing odd behavior..
        /// </summary>
        internal static string SettingsTabAdvancedDefaultsMessage {
            get {
                return ResourceManager.GetString("SettingsTabAdvancedDefaultsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на High-Resolution Rendering.
        /// </summary>
        internal static string SettingsTabAdvancedHighResFrame {
            get {
                return ResourceManager.GetString("SettingsTabAdvancedHighResFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Via software rendering, the screen images can be rendered to 640 x 480. This is very CPU intensive, and only of value to 3D games! If using this option, consider increasing audio buffer size as well..
        /// </summary>
        internal static string SettingsTabAdvancedHighResMessage {
            get {
                return ResourceManager.GetString("SettingsTabAdvancedHighResMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable high-resolution video rendering.
        /// </summary>
        internal static string SettingsTabAdvancedHighResSetting {
            get {
                return ResourceManager.GetString("SettingsTabAdvancedHighResSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reset to defaults.
        /// </summary>
        internal static string SettingsTabAdvancedResetDefaults {
            get {
                return ResourceManager.GetString("SettingsTabAdvancedResetDefaults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Display.
        /// </summary>
        internal static string SettingsTabDisplay {
            get {
                return ResourceManager.GetString("SettingsTabDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Automatically crop game area to remove black borders.
        /// </summary>
        internal static string SettingsTabDisplayAutoCrop {
            get {
                return ResourceManager.GetString("SettingsTabDisplayAutoCrop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Draw gray border around viewing area.
        /// </summary>
        internal static string SettingsTabDisplayDrawBorder {
            get {
                return ResourceManager.GetString("SettingsTabDisplayDrawBorder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;General Display Settings.
        /// </summary>
        internal static string SettingsTabDisplayGeneralOptions {
            get {
                return ResourceManager.GetString("SettingsTabDisplayGeneralOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Preserve aspect ratio.
        /// </summary>
        internal static string SettingsTabDisplayPreserveAspectRatio {
            get {
                return ResourceManager.GetString("SettingsTabDisplayPreserveAspectRatio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Double Resolution Rendering.
        /// </summary>
        internal static string SettingsTabDisplayScalingModeDoubleRes {
            get {
                return ResourceManager.GetString("SettingsTabDisplayScalingModeDoubleRes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Via software rendering, the screen images can be rendered to 640 x 480. This is only of value to 3D Games..
        /// </summary>
        internal static string SettingsTabDisplayScalingModeDoubleResMessage {
            get {
                return ResourceManager.GetString("SettingsTabDisplayScalingModeDoubleResMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Scaling Mode.
        /// </summary>
        internal static string SettingsTabDisplayScalingModeFrame {
            get {
                return ResourceManager.GetString("SettingsTabDisplayScalingModeFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на hq2x.
        /// </summary>
        internal static string SettingsTabDisplayScalingModeHq2x {
            get {
                return ResourceManager.GetString("SettingsTabDisplayScalingModeHq2x", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на hq3x.
        /// </summary>
        internal static string SettingsTabDisplayScalingModeHq3x {
            get {
                return ResourceManager.GetString("SettingsTabDisplayScalingModeHq3x", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на hq4x.
        /// </summary>
        internal static string SettingsTabDisplayScalingModeHq4x {
            get {
                return ResourceManager.GetString("SettingsTabDisplayScalingModeHq4x", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &quot;hqx&quot; is a post-processing filter that attempts to enhance the image by matching adjacent colors..
        /// </summary>
        internal static string SettingsTabDisplayScalingModeHqxMessage {
            get {
                return ResourceManager.GetString("SettingsTabDisplayScalingModeHqxMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The console&apos;s image is typically rendered as 320x240. If using any of the scaling options, consider adjusting the CPU clock speed or the audio buffer size (in the &quot;Advanced&quot; tab)..
        /// </summary>
        internal static string SettingsTabDisplayScalingModeMessage {
            get {
                return ResourceManager.GetString("SettingsTabDisplayScalingModeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No Scaling.
        /// </summary>
        internal static string SettingsTabDisplayScalingModeNone {
            get {
                return ResourceManager.GetString("SettingsTabDisplayScalingModeNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Warning: Scaling modes are CPU intensive!.
        /// </summary>
        internal static string SettingsTabDisplayScalingModeWarning {
            get {
                return ResourceManager.GetString("SettingsTabDisplayScalingModeWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Perform smooth image resizing.
        /// </summary>
        internal static string SettingsTabDisplaySmoothResizing {
            get {
                return ResourceManager.GetString("SettingsTabDisplaySmoothResizing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на When resizing the window, snap to clean increments.
        /// </summary>
        internal static string SettingsTabDisplaySnapResizing {
            get {
                return ResourceManager.GetString("SettingsTabDisplaySnapResizing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Blank (&amp;Void) Area Effects.
        /// </summary>
        internal static string SettingsTabDisplayVoidOptions {
            get {
                return ResourceManager.GetString("SettingsTabDisplayVoidOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Background pattern:.
        /// </summary>
        internal static string SettingsTabDisplayVoidPattern {
            get {
                return ResourceManager.GetString("SettingsTabDisplayVoidPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 4DO.
        /// </summary>
        internal static string SettingsTabDisplayVoidPattern4DO {
            get {
                return ResourceManager.GetString("SettingsTabDisplayVoidPattern4DO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bumps.
        /// </summary>
        internal static string SettingsTabDisplayVoidPatternBumps {
            get {
                return ResourceManager.GetString("SettingsTabDisplayVoidPatternBumps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Metal.
        /// </summary>
        internal static string SettingsTabDisplayVoidPatternMetal {
            get {
                return ResourceManager.GetString("SettingsTabDisplayVoidPatternMetal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No pattern.
        /// </summary>
        internal static string SettingsTabDisplayVoidPatternNone {
            get {
                return ResourceManager.GetString("SettingsTabDisplayVoidPatternNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на General.
        /// </summary>
        internal static string SettingsTabGeneral {
            get {
                return ResourceManager.GetString("SettingsTabGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на When 4DO starts, open whatever game was running last time.
        /// </summary>
        internal static string SettingsTabGeneralAutoLoadLastGame {
            get {
                return ResourceManager.GetString("SettingsTabGeneralAutoLoadLastGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на When a game is opened, re-load the last save state of the current save state slot.
        /// </summary>
        internal static string SettingsTabGeneralAutoLoadLastSave {
            get {
                return ResourceManager.GetString("SettingsTabGeneralAutoLoadLastSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Various &amp;Behaviorial Options.
        /// </summary>
        internal static string SettingsTabGeneralBehaviorOptions {
            get {
                return ResourceManager.GetString("SettingsTabGeneralBehaviorOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на When the main window loses focus, ignore keyboard input.
        /// </summary>
        internal static string SettingsTabGeneralInactiveIgnoreKeyboard {
            get {
                return ResourceManager.GetString("SettingsTabGeneralInactiveIgnoreKeyboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Inactive Window Options.
        /// </summary>
        internal static string SettingsTabGeneralInactiveOptions {
            get {
                return ResourceManager.GetString("SettingsTabGeneralInactiveOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на When the main window loses focus, pause emulation.
        /// </summary>
        internal static string SettingsTabGeneralInactivePauseEmulation {
            get {
                return ResourceManager.GetString("SettingsTabGeneralInactivePauseEmulation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Startup Options.
        /// </summary>
        internal static string SettingsTabGeneralStartupOptions {
            get {
                return ResourceManager.GetString("SettingsTabGeneralStartupOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enlarge Image.
        /// </summary>
        internal static string SettingsTabScaleBox {
            get {
                return ResourceManager.GetString("SettingsTabScaleBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Configure various 4DO settings.
        /// </summary>
        internal static string SettingsWindowInstructions {
            get {
                return ResourceManager.GetString("SettingsWindowInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings.
        /// </summary>
        internal static string SettingsWindowTitle {
            get {
                return ResourceManager.GetString("SettingsWindowTitle", resourceCulture);
            }
        }
    }
}
